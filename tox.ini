[tox]
envlist =
	{py36,pypy3}-{nocov,cov,benchmark,profile}
	coverage-{report,view}
	linting
	security
	build
	wheel
	devenv

[testenv]
deps =
	pytest
	pytest-benchmark
	hypothesis
	WebTest
	cov: coverage
	profile: vmprof
setenv =
	py36: FLAGS_DB = postgres+psycopg2:///flags_test
	py36: MGMT_DB = postgres+psycopg2:///postgres
	pypy3: FLAGS_DB = postgres+psycopg2cffi:///flags_test
	pypy3: MGMT_DB = postgres+psycopg2cffi:///postgres
passenv =
	COVERAGE_FILE
commands =
	nocov: pytest --benchmark-skip {posargs}
	cov: coverage run -m pytest --benchmark-skip {posargs}
	benchmark: pytest -m benchmark --benchmark-autosave {posargs}
	profile: python -m vmprof --web --mem --lines --config vmprof.ini tests/_run.py

[testenv:coverage-report]
basepython = pypy3
deps =
	coverage
skipinstall = true
commands =
	coverage combine {posargs}
	coverage report
	coverage erase

[testenv:coverage-view]
basepython = pypy3
deps =
	coverage
skipinstall = true
commands =
	coverage combine {posargs}
	coverage html
	coverage erase

[testenv:linting]
basepython = pypy3
deps =
	flake8
	pylint
	pytest
	WebTest
commands =
	flake8 src/ensign tests
	pylint src/ensign tests

[testenv:security]
basepython = pypy3
deps =
	bandit
	safety
setenv =
	LC_ALL = en_GB.UTF-8
commands =
	bandit -r src
	safety check --bare

[testenv:build]
basepython = pypy3
deps =
commands =
	python setup.py sdist

[testenv:wheel]
basepython = pypy3
deps =
	wheel
commands =
	python setup.py bdist_wheel

[testenv:devenv]
envdir = ve
basepython = pypy3
usedevelop = true
deps = -rrequirements.txt
commands = 


[flake8]
format = pylint
max-complexity = 10

[pytest]
addopts = -ra
testpaths = tests
markers =
	unit: mark a test as a unit test.
	integration: mark a test as an integration test.
	component: mark a test as a component test.
	profile: mark a test to be profiled.

[coverage:run]
branch = true
source = ensign

[coverage:paths]
source =
	src/ensign
	.tox/*/lib/python*/site-packages/ensign
	.tox/pypy*/site-packages/ensign
	**/src/ensign
	**/.tox/*/lib/python*/site-packages/ensign
	**/.tox/pypy*/site-packages/ensign

[coverage:report]
exclude_lines =
	pragma: no cover
	def __repr__
	def __str__
	if self.debug:
	if settings.DEBUG
	raise AssertionError
	raise NotImplementedError
	if 0:
	if __name__ == .__main__.:
fail_under = 95
precision = 2
show_missing = true
